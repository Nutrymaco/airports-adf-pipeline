{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sen-adf"
		},
		"AzureDataLakeAnalytics1_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataLakeAnalytics1'"
		},
		"AzurePostgreSql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql1'"
		},
		"GoshaBD_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'GoshaBD'"
		},
		"AzureDataLakeAnalytics1_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "sendla"
		},
		"AzureDataLakeAnalytics1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "15f33613-db8a-4a49-819e-a352da33bbc5"
		},
		"AzureDataLakeAnalytics1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "8957652c-8b32-4246-9daa-700cb6f31fc6"
		},
		"AzureDataLakeAnalytics1_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "a66ba509-6b33-4f11-b3f8-8547f92c3805"
		},
		"AzureDataLakeAnalytics1_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "sen-mirea-rg"
		},
		"AzureDataLakeStore1_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://sendls.azuredatalakestore.net/webhdfs/v1"
		},
		"AzureDataLakeStore1_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "8957652c-8b32-4246-9daa-700cb6f31fc6"
		},
		"AzureDataLakeStore1_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "a66ba509-6b33-4f11-b3f8-8547f92c3805"
		},
		"AzureDataLakeStore1_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "sen-mirea-rg"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/day-by-day pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy flights",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set actual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select * from bookings.flights\nwhere EXTRACT(year from scheduled_departure) = @{variables('year')}\n        and\n      EXTRACT(month from scheduled_departure) = @{variables('month')}\n        and\n      EXTRACT(day from scheduled_departure) = @{variables('day')};",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "flight_id",
											"type": "Int32"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "scheduled_departure",
											"type": "DateTime"
										},
										"sink": {
											"type": "DateTime",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "actual_departure",
											"type": "DateTime"
										},
										"sink": {
											"type": "DateTime",
											"ordinal": 3
										}
									},
									{
										"source": {
											"name": "departure_airport",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"name": "arrival_airport",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "FlightsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SetByYearAndMonthAndDay",
								"type": "DatasetReference",
								"parameters": {
									"stage": "raw",
									"day": {
										"value": "@variables('day')",
										"type": "Expression"
									},
									"month": {
										"value": "@variables('month')",
										"type": "Expression"
									},
									"year": {
										"value": "@variables('year')",
										"type": "Expression"
									},
									"fileName": "flights"
								}
							}
						]
					},
					{
						"name": "copy ticket_flights",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set actual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select t.ticket_no, t.flight_id, t.amount from bookings.ticket_flights t\njoin bookings.flights f on t.flight_id = f.flight_id\nwhere EXTRACT(year from scheduled_departure) = @{variables('year')}\n        and\n      EXTRACT(month from scheduled_departure) = @{variables('month')}\n       and\n      EXTRACT(day from scheduled_departure) = @{variables('day')}",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ticket_no",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "flight_id",
											"type": "Int32"
										},
										"sink": {
											"type": "Int32",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Decimal"
										},
										"sink": {
											"type": "Decimal",
											"ordinal": 3
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "BookingsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SetByYearAndMonthAndDay",
								"type": "DatasetReference",
								"parameters": {
									"stage": "raw",
									"day": {
										"value": "@variables('day')",
										"type": "Expression"
									},
									"month": {
										"value": "@variables('month')",
										"type": "Expression"
									},
									"year": {
										"value": "@variables('year')",
										"type": "Expression"
									},
									"fileName": "ticket_flights"
								}
							}
						]
					},
					{
						"name": "copy airports",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set actual",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": "SELECT \n  airport_code, \n  airport_name,\n  city, \n  longitude AS x, \n  latitude AS y\nFROM bookings.airports\n  "
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "airport_code",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "airport_name",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"name": "x",
											"type": "Double"
										},
										"sink": {
											"type": "Decimal",
											"ordinal": 4
										}
									},
									{
										"source": {
											"name": "y",
											"type": "Double"
										},
										"sink": {
											"type": "Decimal",
											"ordinal": 5
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AirportsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SetByYearAndMonthAndDay",
								"type": "DatasetReference",
								"parameters": {
									"stage": "raw",
									"day": {
										"value": "@variables('day')",
										"type": "Expression"
									},
									"month": {
										"value": "@variables('month')",
										"type": "Expression"
									},
									"year": {
										"value": "@variables('year')",
										"type": "Expression"
									},
									"fileName": "airports"
								}
							}
						]
					},
					{
						"name": "BIG JOIN",
						"type": "DataLakeAnalyticsU-SQL",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "scripts/join.usql",
							"scriptLinkedService": {
								"referenceName": "AzureDataLakeStore1",
								"type": "LinkedServiceReference"
							},
							"parameters": {
								"day": {
									"value": "@variables('day')",
									"type": "Expression"
								},
								"month": {
									"value": "@variables('month')",
									"type": "Expression"
								},
								"year": {
									"value": "@variables('year')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDataLakeAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "AGG REPORT ABOUT AMOUNTS",
						"type": "DataLakeAnalyticsU-SQL",
						"dependsOn": [
							{
								"activity": "BIG JOIN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "scripts/amount_agg.usql",
							"scriptLinkedService": {
								"referenceName": "AzureDataLakeStore1",
								"type": "LinkedServiceReference"
							},
							"parameters": {
								"day": {
									"value": "@variables('day')",
									"type": "Expression"
								},
								"month": {
									"value": "@variables('month')",
									"type": "Expression"
								},
								"year": {
									"value": "@variables('year')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDataLakeAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "JOIN FLIGHTS AND AIRPORTS",
						"type": "DataLakeAnalyticsU-SQL",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "scripts/join_flight_and_airports.usql",
							"scriptLinkedService": {
								"referenceName": "AzureDataLakeStore1",
								"type": "LinkedServiceReference"
							},
							"parameters": {
								"day": {
									"value": "@variables('day')",
									"type": "Expression"
								},
								"month": {
									"value": "@variables('month')",
									"type": "Expression"
								},
								"year": {
									"value": "@variables('year')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDataLakeAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "AGG REPORT ABOUT LATENCY",
						"type": "DataLakeAnalyticsU-SQL",
						"dependsOn": [
							{
								"activity": "JOIN FLIGHTS AND AIRPORTS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "scripts/flights_latency_report.usql",
							"scriptLinkedService": {
								"referenceName": "AzureDataLakeStore1",
								"type": "LinkedServiceReference"
							},
							"parameters": {
								"day": {
									"value": "@variables('day')",
									"type": "Expression"
								},
								"month": {
									"value": "@variables('month')",
									"type": "Expression"
								},
								"year": {
									"value": "@variables('year')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDataLakeAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "COPY AMOUNT REPORT_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AGG REPORT ABOUT AMOUNTS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "agg_date",
										"value": {
											"value": "@concat(variables('year'), '-', variables('month'), '-', variables('day'))",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureDataLakeStoreReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "departure_airport_code",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "arrival_airport_code",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "departure_airport",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "arrival_airport",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "departure_city",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "arrival_city",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "departure_airport_x",
											"type": "Double"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "departure_airport_y",
											"type": "Double"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 9
										},
										"sink": {
											"name": "arrival_airport_x",
											"type": "Double"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "arrival_airport_y",
											"type": "Double"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 11
										},
										"sink": {
											"name": "avg_amount",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "tickets_count",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 13
										},
										"sink": {
											"name": "sum_amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "agg_date",
											"type": "String"
										},
										"sink": {
											"name": "agg_date",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SetByYearAndMonthAndDay",
								"type": "DatasetReference",
								"parameters": {
									"stage": "output",
									"day": {
										"value": "@variables('day')",
										"type": "Expression"
									},
									"month": {
										"value": "@variables('month')",
										"type": "Expression"
									},
									"year": {
										"value": "@variables('year')",
										"type": "Expression"
									},
									"fileName": "flights_amount_report"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "GOSHA_FLIGHT_AMOUNT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "COPY LATENCY REPORT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AGG REPORT ABOUT LATENCY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "agg_date",
										"value": {
											"value": "@concat(variables('year'), '-', variables('month'), '-', variables('day'))",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureDataLakeStoreReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "departure_airport",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "departure_airport_name",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "departure_city_name",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "longitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "latitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "avg_latency",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "agg_date",
											"type": "String"
										},
										"sink": {
											"name": "agg_date",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SetByYearAndMonthAndDay",
								"type": "DatasetReference",
								"parameters": {
									"stage": "output",
									"day": {
										"value": "@variables('day')",
										"type": "Expression"
									},
									"month": {
										"value": "@variables('month')",
										"type": "Expression"
									},
									"year": {
										"value": "@variables('year')",
										"type": "Expression"
									},
									"fileName": "flights_latency_report"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "GOSHA_FLIGHT_LATENCY",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "set actual",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('actual')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "set year",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "year",
										"value": {
											"value": "@formatDateTime(addDays(utcnow(), -1), 'yyyy')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "set month",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "set year",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "month",
										"value": {
											"value": "@formatDateTime(addDays(utcnow(), -1), 'MM')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "set day",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "set month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "day",
										"value": {
											"value": "@formatDateTime(addDays(utcnow(), -1), 'dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Wait1",
						"description": "",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "copy flights",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "copy ticket_flights",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "copy airports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"variables": {
					"day": {
						"type": "String",
						"defaultValue": "06"
					},
					"month": {
						"type": "String",
						"defaultValue": "06"
					},
					"year": {
						"type": "String",
						"defaultValue": "2020"
					},
					"actual": {
						"type": "Boolean"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FlightsTable')]",
				"[concat(variables('factoryId'), '/datasets/SetByYearAndMonthAndDay')]",
				"[concat(variables('factoryId'), '/datasets/BookingsTable')]",
				"[concat(variables('factoryId'), '/datasets/AirportsTable')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStore1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeAnalytics1')]",
				"[concat(variables('factoryId'), '/datasets/GOSHA_FLIGHT_AMOUNT')]",
				"[concat(variables('factoryId'), '/datasets/GOSHA_FLIGHT_LATENCY')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/month-by-month')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy flights",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set actual month and year",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select * from bookings.flights\nwhere EXTRACT(year from scheduled_departure) = @{variables('year')}\n        and\n      EXTRACT(month from scheduled_departure) = @{variables('month')}",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "flight_id",
											"type": "Int32"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "scheduled_departure",
											"type": "DateTime"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "scheduled_arrival",
											"type": "DateTime"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"name": "departure_airport",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"name": "arrival_airport",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "FlightsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SetByYearAndMonth",
								"type": "DatasetReference",
								"parameters": {
									"stage": "raw",
									"month": {
										"value": "@variables('month')",
										"type": "Expression"
									},
									"year": {
										"value": "@variables('year')",
										"type": "Expression"
									},
									"fileName": "flights"
								}
							}
						]
					},
					{
						"name": "Copy bookings",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set actual month and year",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select\n       b.book_ref, book_date, total_amount\nfrom bookings.bookings b\n    join bookings.tickets t on b.book_ref = t.book_ref\n    join bookings.ticket_flights tf on t.ticket_no = tf.ticket_no\n    join bookings.flights f on tf.flight_id = f.flight_id\nwhere\n    extract(year from f.scheduled_departure) = @{variables('year')}\n        and\n    extract(month from f.scheduled_departure) = @{variables('month')}",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "book_ref",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "book_date",
											"type": "DateTime"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "total_amount",
											"type": "Decimal"
										},
										"sink": {
											"type": "Decimal",
											"ordinal": 3
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AnyTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SetByYearAndMonth",
								"type": "DatasetReference",
								"parameters": {
									"stage": "raw",
									"month": {
										"value": "@variables('month')",
										"type": "Expression"
									},
									"year": {
										"value": "@variables('year')",
										"type": "Expression"
									},
									"fileName": "bookings"
								}
							}
						]
					},
					{
						"name": "copy ticket_flights",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set actual month and year",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select t.ticket_no, t.flight_id, t.amount from bookings.ticket_flights t\njoin bookings.flights f on t.flight_id = f.flight_id\nwhere EXTRACT(year from scheduled_departure) = @{variables('year')}\n        and\n      EXTRACT(month from scheduled_departure) = @{variables('month')}",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 2,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ticket_no",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "flight_id",
											"type": "Int32"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Decimal"
										},
										"sink": {
											"type": "Decimal",
											"ordinal": 3
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "BookingsTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SetByYearAndMonth",
								"type": "DatasetReference",
								"parameters": {
									"stage": "raw",
									"month": {
										"value": "@variables('month')",
										"type": "Expression"
									},
									"year": {
										"value": "@variables('year')",
										"type": "Expression"
									},
									"fileName": "ticket_flights"
								}
							}
						]
					},
					{
						"name": "Copy tickets",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set actual month and year",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzurePostgreSqlSource",
								"query": {
									"value": "select\n    t.ticket_no, t.book_ref, t.passenger_id, t.passenger_name,\n   t.contact_data->>'phone' as phone, t.contact_data->>'email' as email\nfrom bookings.tickets t\n    join bookings.ticket_flights tf on t.ticket_no = tf.ticket_no\n    join bookings.flights f on tf.flight_id = f.flight_id\nwhere\n    extract(year from f.scheduled_departure) = @{variables('year')}\n        and\n    extract(month from f.scheduled_departure) = @{variables('month')}",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ticket_no",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "book_ref",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "passenger_id",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"name": "passenger_name",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"name": "phone",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AnyTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SetByYearAndMonth",
								"type": "DatasetReference",
								"parameters": {
									"stage": "raw",
									"month": {
										"value": "@variables('month')",
										"type": "Expression"
									},
									"year": {
										"value": "@variables('year')",
										"type": "Expression"
									},
									"fileName": "tickets"
								}
							}
						]
					},
					{
						"name": "JOIN BOOKINGS AND FLIGHTS",
						"type": "DataLakeAnalyticsU-SQL",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "scripts/join_bookings_and_flights.usql",
							"scriptLinkedService": {
								"referenceName": "AzureDataLakeStore1",
								"type": "LinkedServiceReference"
							},
							"parameters": {
								"year": {
									"value": "@variables('year')",
									"type": "Expression"
								},
								"month": {
									"value": "@variables('month')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDataLakeAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "set actual month and year",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('actual')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "set month",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "month",
										"value": {
											"value": "@formatDateTime(addDays(utcnow(), -1), 'MM')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "set year",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "set month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "year",
										"value": {
											"value": "@formatDateTime(addDays(utcnow(), -1), 'yyyy')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "CREATE REPORT",
						"type": "DataLakeAnalyticsU-SQL",
						"dependsOn": [
							{
								"activity": "JOIN BOOKINGS AND FLIGHTS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "scripts/agg_bookings_report.usql",
							"scriptLinkedService": {
								"referenceName": "AzureDataLakeStore1",
								"type": "LinkedServiceReference"
							},
							"parameters": {
								"year": {
									"value": "@variables('year')",
									"type": "Expression"
								},
								"month": {
									"value": "@variables('month')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDataLakeAnalytics1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "COPY REPORT",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CREATE REPORT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "agg_date",
										"value": {
											"value": "@concat(variables('year'), '-', variables('month'), '-', '01')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureDataLakeStoreReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "book_number",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "people_amount",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "flight_count",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "book_and_flight_diff",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "average_ticket_price",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "book_sum",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "agg_date",
											"type": "String"
										},
										"sink": {
											"name": "agg_date",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SetByYearAndMonth",
								"type": "DatasetReference",
								"parameters": {
									"stage": "output",
									"month": {
										"value": "@variables('month')",
										"type": "Expression"
									},
									"year": {
										"value": "@variables('year')",
										"type": "Expression"
									},
									"fileName": "bookings_diff_report"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "GOSHA_BOOKING_TABLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "copy flights",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy bookings",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "copy ticket_flights",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Copy tickets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"variables": {
					"month": {
						"type": "String",
						"defaultValue": "05"
					},
					"year": {
						"type": "String",
						"defaultValue": "2020"
					},
					"actual": {
						"type": "Boolean",
						"defaultValue": true
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FlightsTable')]",
				"[concat(variables('factoryId'), '/datasets/SetByYearAndMonth')]",
				"[concat(variables('factoryId'), '/datasets/AnyTable')]",
				"[concat(variables('factoryId'), '/datasets/BookingsTable')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStore1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeAnalytics1')]",
				"[concat(variables('factoryId'), '/datasets/GOSHA_BOOKING_TABLE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AircraftsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "bookings",
					"table": "aircrafts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AirportsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "bookings",
					"table": "airports"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AnyTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BookingsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "bookings",
					"table": "bookings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FlightsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "bookings",
					"table": "flights"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GOSHA_AIRCRAFT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GoshaBD",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Aircraft2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GoshaBD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GOSHA_BOOKING_TABLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GoshaBD",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "book_number",
						"type": "text"
					},
					{
						"name": "people_amount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "flight_count",
						"type": "int",
						"precision": 10
					},
					{
						"name": "book_and_flight_diff",
						"type": "int",
						"precision": 10
					},
					{
						"name": "average_ticket_price",
						"type": "int",
						"precision": 10
					},
					{
						"name": "book_sum",
						"type": "money",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Booking"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GoshaBD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GOSHA_FLIGHT_AMOUNT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GoshaBD",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Flight_Amount"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GoshaBD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GOSHA_FLIGHT_LATENCY')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GoshaBD",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Flight_Latency"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/GoshaBD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SetByYearAndMonth')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"stage": {
						"type": "string",
						"defaultValue": "none"
					},
					"month": {
						"type": "string",
						"defaultValue": "01"
					},
					"year": {
						"type": "string",
						"defaultValue": "2020"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "file"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": {
							"value": "@concat(dataset().filename, '.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(concat(concat(dataset().stage, '/'),\nconcat(dataset().year, '/')),\nconcat(dataset().month, '/'))",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStore1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SetByYearAndMonthAndDay')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"stage": {
						"type": "string",
						"defaultValue": "none"
					},
					"day": {
						"type": "string",
						"defaultValue": "01"
					},
					"month": {
						"type": "string",
						"defaultValue": "01"
					},
					"year": {
						"type": "string",
						"defaultValue": "2020"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "fileName"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": {
							"value": "@concat(dataset().fileName, '.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(concat(concat(dataset().stage, '/'),\nconcat(dataset().year, '/')),\nconcat(\nconcat(dataset().month, '/'),\nconcat(dataset().day, '/')))",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStore1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TicketsFlightsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "bookings",
					"table": "ticket_flights"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeAnalytics",
				"typeProperties": {
					"accountName": "[parameters('AzureDataLakeAnalytics1_properties_typeProperties_accountName')]",
					"servicePrincipalId": "[parameters('AzureDataLakeAnalytics1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeAnalytics1_servicePrincipalKey')]"
					},
					"tenant": "[parameters('AzureDataLakeAnalytics1_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('AzureDataLakeAnalytics1_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureDataLakeAnalytics1_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStore1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('AzureDataLakeStore1_properties_typeProperties_dataLakeStoreUri')]",
					"tenant": "[parameters('AzureDataLakeStore1_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('AzureDataLakeStore1_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureDataLakeStore1_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoshaBD')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('GoshaBD_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-upd-in-1-day')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "most popular directions in 24 hours updated 2 times in 24 hours",
				"activities": [
					{
						"name": "set variables",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('set_actual')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Set year",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "year",
										"value": {
											"value": "@formatDateTime(utcnow(), 'yyyy')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set month",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set year",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "month",
										"value": {
											"value": "@formatDateTime(utcnow(), 'MM')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set day",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "day",
										"value": {
											"value": "@formatDateTime(utcnow(), 'dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set part of day",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set day",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "part_of_day",
										"value": {
											"value": "@string(int(div(int(formatDateTime(utcNow(), 'hh')),\ndiv(24, int(variables('count_of_parts')))\n)))",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"year": {
						"type": "String",
						"defaultValue": "2020"
					},
					"month": {
						"type": "String",
						"defaultValue": "01"
					},
					"day": {
						"type": "String",
						"defaultValue": "01"
					},
					"part_of_day": {
						"type": "String",
						"defaultValue": "1"
					},
					"count_of_parts": {
						"type": "String",
						"defaultValue": "2"
					},
					"set_actual": {
						"type": "Boolean",
						"defaultValue": true
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}